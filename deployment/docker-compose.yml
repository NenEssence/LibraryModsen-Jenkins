name: 'spring-boot-microservices'
services:
  api-gateway:
    image: api-gateway:latest
    container_name: gateway
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    ports:
      - "8765:8765"
    environment:
      - SPRING_APPLICATION_NAME=api-gateway
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - eureka-net
    depends_on:
      - eureka-server
  eureka-server:
    image: eureka-server:latest
    container_name: eureka
    build:
      context: ../eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - eureka-net
    environment:
      - EUREKA_INSTANCE_PREFERIPADDRESS=true
  book-service:
    image: book-service:latest
    container_name: book_service
    build:
      context: ../book-service
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=book-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:15431/postgres
    depends_on:
      - library-service
    networks:
      - eureka-net
  identity-service:
    image: identity-service:latest
    container_name: identity-service
    build:
      context: ../identity-service
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=identity-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:15433/postgres
    depends_on:
      - api-gateway
    networks:
      - eureka-net
  library-service:
    image: library-service:latest
    container_name: library_service
    build:
      context: ../library-service
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=library-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:15432/postgres
    depends_on:
      - identity-service
    networks:
      - eureka-net
  bookdb:
    container_name: bookdb_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=postgres
    volumes:
      - ./initBook:/docker-entrypoint-initdb.d
    ports:
      - "15431:5432"
    networks:
      - eureka-net
  bookclaimsdb:
    container_name: bookclaimsdb_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=postgres
    volumes:
      - ./initBookclaim:/docker-entrypoint-initdb.d
    ports:
      - "15432:5432"
    networks:
      - eureka-net
  userdb:
    container_name: userdb_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=postgres
    volumes:
      - ./initUser:/docker-entrypoint-initdb.d
    ports:
      - "15433:5432"
    networks:
      - eureka-net
networks:
  eureka-net:
    driver: bridge